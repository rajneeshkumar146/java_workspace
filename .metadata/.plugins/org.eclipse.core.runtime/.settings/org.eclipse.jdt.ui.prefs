content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="L010_StackAndQueue.Stack_001"><rhs name\="L010_StackAndQueue.DynamicStack_001"/></lhs><lhs name\="L010_StackAndQueue.DynamicStack_001"><rhs name\="L010_StackAndQueue.DynamicStack_001"/></lhs><lhs name\="java.util.ArrayDeque"><rhs name\="java.util.ArrayDeque"/></lhs><lhs name\="L011_LinkedList.LinkedList_001$Linkedlist$Node"><rhs name\="L011_LinkedList.LinkedList_001$Linkedlist$Node"/></lhs><lhs name\="L011_LinkedList.LinkedList_001$Linkedlist"><rhs name\="L011_LinkedList.LinkedList_001$Linkedlist"/></lhs><lhs name\="L011_LinkedList.LinkedList_001$Linkedlist$HeapMover"><rhs name\="L011_LinkedList.LinkedList_001$Linkedlist$HeapMover"/></lhs><lhs name\="GenericTree.Q300_ImmediateSmallerElement$GenericTree"><rhs name\="GenericTree.Q300_ImmediateSmallerElement$GenericTree"/></lhs><lhs name\="BinaryTree.Q305_RandomPointerCloneTree$Node"><rhs name\="BinaryTree.Q305_RandomPointerCloneTree$Node"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="BinaryTree.Q319_VerticalOrder$pair"><rhs name\="BinaryTree.Q319_VerticalOrder$pair"/></lhs><lhs name\="L012_GenericTree.GenericTree_001$genericTree$Node"><rhs name\="L012_GenericTree.GenericTree_001$genericTree$Node"/></lhs><lhs name\="L012_GenericTree.GenericTree_001$genericTree"><rhs name\="L012_GenericTree.GenericTree_001$genericTree"/></lhs><lhs name\="GenericTree.Q299_SeriallizeAndDeseriallize$Node"><rhs name\="GenericTree.Q299_SeriallizeAndDeseriallize$Node"/></lhs><lhs name\="GenericTree.Q304_MaximumSumOfImmediateChildren$Pair"><rhs name\="GenericTree.Q304_MaximumSumOfImmediateChildren$Pair"/></lhs><lhs name\="GenericTree.Q306_ConstructTreeByUsingPreOderTraversal$Node"><rhs name\="GenericTree.Q306_ConstructTreeByUsingPreOderTraversal$Node"/></lhs><lhs name\="BinaryTree.Q326_DoublyLinkedListFromBinaryTree$Node"><rhs name\="BinaryTree.Q326_DoublyLinkedListFromBinaryTree$Node"/></lhs><lhs name\="BinaryTree.Q326_DoublyLinkedListFromBinaryTree$Pair"><rhs name\="BinaryTree.Q326_DoublyLinkedListFromBinaryTree$Pair"/></lhs><lhs name\="BinaryTree.Q340_MaximumWidth$Node"><rhs name\="BinaryTree.Q340_MaximumWidth$Node"/></lhs><lhs name\="BinaryTree.Q353_TiltBinaryTree$Pair"><rhs name\="BinaryTree.Q353_TiltBinaryTree$Pair"/></lhs><lhs name\="L012_GenericTree.GenericTree_001$genericTree$Heapmover"><rhs name\="L012_GenericTree.GenericTree_001$genericTree$Heapmover"/></lhs><lhs name\="L012_GenericTree.GenericTree_001$genericTree$justlargerMover"><rhs name\="L012_GenericTree.GenericTree_001$genericTree$justlargerMover"/></lhs><lhs name\="BinaryTree.Q348_CustomTreeProblem$Node"><rhs name\="BinaryTree.Q348_CustomTreeProblem$Node"/></lhs><lhs name\="BinaryTree.Q331_MaximumEdge$Pair"><rhs name\="BinaryTree.Q331_MaximumEdge$Pair"/></lhs><lhs name\="BinaryTree.Q345_deepestLeftLeaf$Pair"><rhs name\="BinaryTree.Q345_deepestLeftLeaf$Pair"/></lhs><lhs name\="BinaryTree.Q363_HeightOfSpecialTree$Node"><rhs name\="BinaryTree.Q363_HeightOfSpecialTree$Node"/></lhs><lhs name\="BinaryTree.Q342_MaximumSumPath$Pair"><rhs name\="BinaryTree.Q342_MaximumSumPath$Pair"/></lhs><lhs name\="BinaryTree.Q357_ExpressionTree$Node"><rhs name\="BinaryTree.Q357_ExpressionTree$Node"/></lhs><lhs name\="BinaryTree.Q347_LeftView$Pair"><rhs name\="BinaryTree.Q347_LeftView$Pair"/></lhs><lhs name\="L013_BinaryTree$BinaryTree$Node"><rhs name\="L013_BinaryTree$BinaryTree$Node"/></lhs><lhs name\="L013_BinaryTree$BinaryTree"><rhs name\="L013_BinaryTree$BinaryTree"/></lhs><lhs name\="L013_BinaryTree$BinaryTree$DiaPair"><rhs name\="L013_BinaryTree$BinaryTree$DiaPair"/></lhs><lhs name\="BinaryTree.Q341_DoubleTree$Node"><rhs name\="BinaryTree.Q341_DoubleTree$Node"/></lhs><lhs name\="L013_BinaryTree.L013_BinaryTree$BinaryNode"><rhs name\="L013_BinaryTree.L013_BinaryTree$BinaryNode"/></lhs><lhs name\="L013_BinaryTree.L013_BinaryTree$BinaryTree$Node"><rhs name\="L013_BinaryTree.L013_BinaryTree$BinaryTree$Node"/></lhs><lhs name\="L013_BinaryTree.L013_BinaryTree$BinaryTree"><rhs name\="L013_BinaryTree.L013_BinaryTree$BinaryTree"/></lhs><lhs name\="L013_BinaryTree.L013_BinaryTree$BinaryTree$balancetre"><rhs name\="L013_BinaryTree.L013_BinaryTree$BinaryTree$balancetre"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="BST.Q377_AddGreaterNodes$HPM"><rhs name\="BST.Q377_AddGreaterNodes$HPM"/></lhs><lhs name\="BST.Q381_subTreeInRage$Pair"><rhs name\="BST.Q381_subTreeInRage$Pair"/></lhs><lhs name\="GenericTree.Q313_CountSubTreeWithTarget$Node"><rhs name\="GenericTree.Q313_CountSubTreeWithTarget$Node"/></lhs><lhs name\="GenericTree.Q313_CountSubTreeWithTarget$pair"><rhs name\="GenericTree.Q313_CountSubTreeWithTarget$pair"/></lhs><lhs name\="BinaryTree.Q313_CountSubtreesWithTargetSum$Pair"><rhs name\="BinaryTree.Q313_CountSubtreesWithTargetSum$Pair"/></lhs><lhs name\="L014_BST.BST_001$BST$Node"><rhs name\="L014_BST.BST_001$BST$Node"/></lhs><lhs name\="L014_BST.BST_001$BST"><rhs name\="L014_BST.BST_001$BST"/></lhs><lhs name\="L014_BST.BST_001$BST$pair"><rhs name\="L014_BST.BST_001$BST$pair"/></lhs><lhs name\="L015_AVL.AVL_001$AVL$Node"><rhs name\="L015_AVL.AVL_001$AVL$Node"/></lhs><lhs name\="L015_AVL.AVL_001$AVL"><rhs name\="L015_AVL.AVL_001$AVL"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.HashMap"/><rhs name\="java.util.BitSet"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayDeque"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="Graphs.HashMap.BidirectedGraphs$Pair"><rhs name\="Graphs.HashMap.BidirectedGraphs$Pair"/></lhs><lhs name\="java.util.Deque"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayDeque"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayDeque"/></lhs><lhs name\="java.util.AbstractSequentialList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.LinkedList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="L019_Graph.Graph_001$Graph$TPair"><rhs name\="L019_Graph.Graph_001$Graph$TPair"/></lhs><lhs name\="Graphs.TopoLogicalsort.TopoSort_001$Pair"><rhs name\="Graphs.TopoLogicalsort.TopoSort_001$Pair"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.lang.Integer"/></lhs><lhs name\="Graphs.HashMap.BidirectedGraphs$Cluster"><rhs name\="Graphs.HashMap.BidirectedGraphs$Cluster"/></lhs><lhs name\="Graphs.HashMap.BidirectedGraphs$KruskalPair"><rhs name\="Graphs.HashMap.BidirectedGraphs$KruskalPair"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.AbstractSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.HashSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="Graphs.HashMap.BidirectedGraphs$DijikstraPair"><rhs name\="Graphs.HashMap.BidirectedGraphs$DijikstraPair"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="Graphs.Kruskal_Edge.Kruskal_byEdge$Cluster"><rhs name\="Graphs.Kruskal_Edge.Kruskal_byEdge$Cluster"/></lhs><lhs name\="java.util.AbstractQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.PriorityQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="Graphs.HashMap.BidirectedGraphs$PrimsPair"><rhs name\="Graphs.HashMap.BidirectedGraphs$PrimsPair"/></lhs><lhs name\="Graphs.Kruskal_Edge.Kruskal_byEdge$Edge"><rhs name\="Graphs.Kruskal_Edge.Kruskal_byEdge$Edge"/></lhs><lhs name\="Geeks.Q013_Printing_knapSack_01$Pair"><rhs name\="Geeks.Q013_Printing_knapSack_01$Pair"/></lhs><lhs name\="L019_HashMap.HashMap_001$Linkedlist"><rhs name\="L019_HashMap.HashMap_001$Linkedlist"/></lhs><lhs name\="L019_HashMap.HashMap_001$HashMap$Node"><rhs name\="L019_HashMap.HashMap_001$HashMap$Node"/></lhs><lhs name\="L019_HashMap.HashMap_001$HashMap"><rhs name\="L019_HashMap.HashMap_001$HashMap"/></lhs><lhs name\="L020_SegmentTree.SegmentTree_001$SegmentTree$Node"><rhs name\="L020_SegmentTree.SegmentTree_001$SegmentTree$Node"/></lhs><lhs name\="L021_FenwickTree.FenwickTree_001$fenwickTree"><rhs name\="L021_FenwickTree.FenwickTree_001$fenwickTree"/></lhs><lhs name\="L020_SegmentTree.SegmentTree_001$SegmentTree"><rhs name\="L020_SegmentTree.SegmentTree_001$SegmentTree"/></lhs><lhs name\="Geeks.DP.QuestionTill30.Q001_LongestIncreasingSubsequence_On2$Pair"><rhs name\="Geeks.DP.QuestionTill30.Q001_LongestIncreasingSubsequence_On2$Pair"/></lhs><lhs name\="Geeks.DP.QuestionTill30.Q002_LongestDecreasingSubsequence_On2$Pair"><rhs name\="Geeks.DP.QuestionTill30.Q002_LongestDecreasingSubsequence_On2$Pair"/></lhs><lhs name\="java.util.Iterator"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.awt.ItemSelectable"><rhs name\="java.awt.List"/></lhs><lhs name\="javax.accessibility.Accessible"><rhs name\="java.awt.List"/></lhs><lhs name\="java.awt.Component"><rhs name\="java.awt.List"/></lhs><lhs name\="java.awt.image.ImageObserver"><rhs name\="java.awt.List"/></lhs><lhs name\="java.awt.MenuContainer"><rhs name\="java.awt.List"/></lhs><lhs name\="java.awt.List"><rhs name\="java.awt.List"/></lhs><lhs name\="solution$Person"><rhs name\="solution$Person"/></lhs><lhs name\="solution$Pair"><rhs name\="solution$Pair"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.util.BitSet"><rhs name\="java.util.BitSet"/></lhs><lhs name\="LCA.RMQ_Logn$Pair"><rhs name\="LCA.RMQ_Logn$Pair"/></lhs></history>
content_assist_number_of_computers=19
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.exception.name=e
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.gettersetter.use.is=true
org.eclipse.jdt.ui.javadoc=false
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.overrideannotation=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="classbody_context" deleted\="false" description\="Code in new class type bodies" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.classbody" name\="classbody">    final int mod\=1000000000+7;\r\n\tfinal int max \= Integer.MAX_VALUE;\r\n\tfinal int min \= Integer.MIN_VALUE;\r\n\t\t \r\npublic static Scanner scn \= new Scanner(System.in);\r\n    \r\npublic static void main(String[] args) throws Exception {\r\n\t\tsolve();\r\n\t}\r\n\r\n\tpublic static void solve() throws Exception {\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</template></templates>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="It Reverse Array" enabled\="true" name\="reve">private static &lt;T&gt; void ReverseArray(T[] arr, int st, int en) {&\#13;\r\n\t\tfor (int i \= st; st &lt;\= en; st++, en--) {&\#13;\r\n\t\t\tswap(arr, st, en);&\#13;\r\n\t\t}&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Swap Element In OneDArray" enabled\="true" name\="swap">private static void swap(${dataMember}[] arr, int i, int j) {&\#13;\r\n\t\t${dataMember} temp \= arr[i];&\#13;\r\n\t\tarr[i] \= arr[j];&\#13;\r\n\t\tarr[j] \= temp;&\#13;\r\n ${cursor}&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Give The Frequency of character in in array." enabled\="true" name\="FreqMap">private static ${Array_Type}[] FreqMapOfString(String str) {&\#13;\r\n\t\t${Array_Type}[] map \= new ${Array_Type}[26];&\#13;\r\n&\#13;\r\n        char ch\='a'${cursor};&\#13;\r\n\t\tfor (int i \= 0; i &lt; str.length(); i++) {&\#13;\r\n\t\t\t&\#13;\r\n         int index \= str.charAt(i) - ch;&\#13;\r\n\t\t\tmap[index]++;&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn map;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It give Number Length" enabled\="true" name\="numlen">private static int NumberLength(int n) {&\#13;\r\n\t\tint length \= 0;&\#13;\r\n\t\twhile (n \!\= 0) {&\#13;\r\n\t\t\tlength++;&\#13;\r\n\t\t\tn \= n / 10;&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn length;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Swap elements of Matrix's" enabled\="true" name\="swap2d">private static void Swap2DEle(${array_type}[][] arr, int i1, int j1, int i2, int j2) {&\#13;\r\n\t\t${array_type} temp \= arr[i1][j1];&\#13;\r\n\t\tarr[i1][j1] \= arr[i2][j2];&\#13;\r\n\t\tarr[i2][j2] \= temp;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It return a prifix sum array" enabled\="true" name\="prefixarr">private static ${array_type}[] PrifixSumArray(${array_type}[] arr) {&\#13;\r\n\t\tfor (int i \= 1${cursor}; i &lt; arr.length; i++) {&\#13;\r\n\t\t\tarr[i] +\= arr[i - 1];&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn arr;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Display Matrix." enabled\="true" name\="displaymatrix">private static void displayMatrix(${matrix_type}[][] arr) throws IOException {&\#13;\r\n\t\tfor (${matrix_type}[] i \: arr) {&\#13;\r\n\t\t\tfor (${matrix_type} el \: i) {&\#13;\r\n\t\t\t\t//pnter.print(el + " ");${cursor}&\#13;\r\n\t\t\t\tSystem.out.print(el+" ");&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\t//pnter.printLine("");&\#13;\r\n\t\t\t System.out.println();&\#13;\r\n\t\t}&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Display OneD Array." enabled\="true" name\="displayarr">private static void displayArray(${array_type}[] arr) throws IOException {&\#13;\r\n\t\tfor (int i \= 0; i &lt; arr.length; i++) {&\#13;\r\n\t\t\t//pnter.print(arr[i] + " ");${cursor}&\#13;\r\n\t\t\t System.out.print(arr[i]+" ");&\#13;\r\n\t\t}&\#13;\r\n\t\t//pnter.printLine("");&\#13;\r\n\t\tSystem.out.println();&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Return Eight Direction's unit direction vector array." enabled\="true" name\="EightDirec">private static int[][] Eightdirction() {&\#13;\r\n\t\tint[][] dirc \= { { 1, 0 }, { 0, 1 }, { -1, 0 }, { 0, -1 }, { 1, 1 }, { -1, -1 }, { 1, -1 }, { -1, 1 } };&\#13;\r\n&\#13;\r\n\t\treturn dirc;&\#13;\r\n&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Give Four Unit Direction's vector array." enabled\="true" name\="fourDirc">private static int[][] Fourdirction() {&\#13;\r\n\t\tint[][] dirc \= { { 1, 0 }, { 0, 1 }, { -1, 0 }, { 0, -1 } };&\#13;\r\n&\#13;\r\n\t\treturn dirc;&\#13;\r\n&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Array Input and return array." enabled\="true" name\="arrInput">private static ${array_type}[] ArrayInput(int n) throws IOException {&\#13;\r\n\t\t${array_type}[] arr \= new ${array_type}[n];&\#13;\r\n\t\tfor (int i \= 0; i &lt; n; i++) {&\#13;\r\n\t\t\tarr[i] \= scn.scanInt()${cursor};&\#13;\r\n\t\t}&\#13;\r\n\t\treturn arr;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="It Take Input In Matrix and Return matrix" enabled\="true" name\="matrixInput">private static ${matrix_type}[][] MatrixInput(int n, int m) throws IOException {&\#13;\r\n\t\t${matrix_type}[][] arr \= new ${matrix_type}[n][m];&\#13;\r\n\t\tfor (int row \= 0; row &lt; n; row++) {&\#13;\r\n\t\t\tfor (int col \= 0; col &lt; m; col++) {&\#13;\r\n\t\t\t\tarr[row][col] \= scn.scanInt()${cursor};&\#13;\r\n\t\t}&\#13;\r\n\t\t}&\#13;\r\n\t\treturn arr;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="In Wrap Content in nested For" enabled\="true" name\="nestedfor">for(int ${index}\=${starting};${index}&lt;${array}.length;${index}++){&\#13;\r\nfor(int ${index1}\=${starting1};${index1}&lt;${array}[0].length;${index1}++){&\#13;\r\n${cursor}&\#13;\r\n}&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="This is HashMap of HashSet" enabled\="true" name\="hashmapofset">private static void PutInHashMapOfHashSet(HashMap&lt;${datatype},HashSet&lt;${datatype}&gt;()&gt; set,${datatype} key, ${datatype} value){&\#13;\r\nif (\!set.containsKey(key)) {&\#13;\r\n\t\t\tset.put(key, new HashSet&lt;&gt;());&\#13;\r\n\t\t\tset.get(key).add(value);&\#13;\r\n\t\t} else {&\#13;\r\n\t\t\tset.get(key).add(value);&\#13;\r\n\t\t}&\#13;\r\n}&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Static Block for Comment generator" enabled\="true" name\="commentfunction">static {&\#13;\r\n\t\tString str \= "";&\#13;\r\n\t\tStringBuilder sb \= new StringBuilder();&\#13;\r\n\t\tfor (int i \= 0; i &lt; str.length(); i++) {&\#13;\r\n\t\t\tchar ch \= str.charAt(i);&\#13;\r\n\t\t\tif (ch \=\= ' ') {&\#13;\r\n\t\t\t\tsb.append("_");&\#13;\r\n\t\t\t} else {&\#13;\r\n\t\t\t\tsb.append(ch);&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tsb.append(".");&\#13;\r\n        System.out.println(sb.toString());&\#13;\r\n\t}&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Fast Input and Output" enabled\="true" name\="fastI/O">\t// -----------------------------------------------------------------------------------------&\#13;\r\n&\#13;\r\n    private static Scan scn \= new Scan(System.in);&\#13;\r\n\tprivate static Print pnter \= new Print();&\#13;\r\n&\#13;\r\nstatic class Scan {&\#13;\r\n\t\tprivate InputStream in;&\#13;\r\n\t\tprivate byte[] buf \= new byte[1024 * 1024];&\#13;\r\n\t\tprivate int index;&\#13;\r\n\t\tprivate int total;&\#13;\r\n&\#13;\r\n\t\tpublic Scan(InputStream in) {&\#13;\r\n\t\t\tthis.in \= in;&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic int scan() throws IOException {&\#13;\r\n\t\t\tif (total &lt; 0)&\#13;\r\n\t\t\t\tthrow new InputMismatchException();&\#13;\r\n\t\t\tif (index &gt;\= total) {&\#13;\r\n\t\t\t\tindex \= 0;&\#13;\r\n\t\t\t\ttotal \= in.read(buf);&\#13;\r\n\t\t\t\tif (total &lt;\= 0)&\#13;\r\n\t\t\t\t\treturn -1;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\treturn buf[index++];&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic int scanInt() throws IOException {&\#13;\r\n\t\t\tint integer \= 0;&\#13;\r\n\t\t\tint n \= scan();&\#13;\r\n\t\t\twhile (isWhiteSpace(n))&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\tint neg \= 1;&\#13;\r\n\t\t\tif (n \=\= '-') {&\#13;\r\n\t\t\t\tneg \= -1;&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\twhile (\!isWhiteSpace(n)) {&\#13;\r\n\t\t\t\tif (n &gt;\= '0' &amp;&amp; n &lt;\= '9') {&\#13;\r\n\t\t\t\t\tinteger *\= 10;&\#13;\r\n\t\t\t\t\tinteger +\= n - '0';&\#13;\r\n\t\t\t\t\tn \= scan();&\#13;\r\n\t\t\t\t} else&\#13;\r\n\t\t\t\t\tthrow new InputMismatchException();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\treturn neg * integer;&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic long scanLong() throws IOException {&\#13;\r\n\t\t\tlong integer \= 0;&\#13;\r\n\t\t\tint n \= scan();&\#13;\r\n\t\t\twhile (isWhiteSpace(n))&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\tint neg \= 1;&\#13;\r\n\t\t\tif (n \=\= '-') {&\#13;\r\n\t\t\t\tneg \= -1;&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\twhile (\!isWhiteSpace(n)) {&\#13;\r\n\t\t\t\tif (n &gt;\= '0' &amp;&amp; n &lt;\= '9') {&\#13;\r\n\t\t\t\t\tinteger *\= 10;&\#13;\r\n\t\t\t\t\tinteger +\= n - '0';&\#13;\r\n\t\t\t\t\tn \= scan();&\#13;\r\n\t\t\t\t} else&\#13;\r\n\t\t\t\t\tthrow new InputMismatchException();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\treturn neg * integer;&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic double scanDouble() throws IOException {&\#13;\r\n\t\t\tdouble doub \= 0;&\#13;\r\n\t\t\tint n \= scan();&\#13;\r\n\t\t\twhile (isWhiteSpace(n))&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\tint neg \= 1;&\#13;\r\n\t\t\tif (n \=\= '-') {&\#13;\r\n\t\t\t\tneg \= -1;&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\twhile (\!isWhiteSpace(n) &amp;&amp; n \!\= '.') {&\#13;\r\n\t\t\t\tif (n &gt;\= '0' &amp;&amp; n &lt;\= '9') {&\#13;\r\n\t\t\t\t\tdoub *\= 10;&\#13;\r\n\t\t\t\t\tdoub +\= n - '0';&\#13;\r\n\t\t\t\t\tn \= scan();&\#13;\r\n\t\t\t\t} else&\#13;\r\n\t\t\t\t\tthrow new InputMismatchException();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\tif (n \=\= '.') {&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\t\tdouble temp \= 1;&\#13;\r\n\t\t\t\twhile (\!isWhiteSpace(n)) {&\#13;\r\n\t\t\t\t\tif (n &gt;\= '0' &amp;&amp; n &lt;\= '9') {&\#13;\r\n\t\t\t\t\t\ttemp /\= 10;&\#13;\r\n\t\t\t\t\t\tdoub +\= (n - '0') * temp;&\#13;\r\n\t\t\t\t\t\tn \= scan();&\#13;\r\n\t\t\t\t\t} else&\#13;\r\n\t\t\t\t\t\tthrow new InputMismatchException();&\#13;\r\n\t\t\t\t}&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\treturn doub * neg;&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic String scanString() throws IOException {&\#13;\r\n\t\t\tStringBuilder sb \= new StringBuilder();&\#13;\r\n\t\t\tint n \= scan();&\#13;\r\n\t\t\twhile (isWhiteSpace(n))&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\twhile (\!isWhiteSpace(n)) {&\#13;\r\n\t\t\t\tsb.append((char) n);&\#13;\r\n\t\t\t\tn \= scan();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\treturn sb.toString();&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tprivate boolean isWhiteSpace(int n) {&\#13;\r\n\t\t\tif (n \=\= ' ' || n \=\= '\\n' || n \=\= '\\r' || n \=\= '\\t' || n \=\= -1)&\#13;\r\n\t\t\t\treturn true;&\#13;\r\n\t\t\treturn false;&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n\tstatic class Print {&\#13;\r\n\t\tprivate final BufferedWriter bw;&\#13;\r\n&\#13;\r\n\t\tpublic Print() {&\#13;\r\n\t\t\tbw \= new BufferedWriter(new OutputStreamWriter(System.out));&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic void print(String str) throws IOException {&\#13;\r\n\t\t\tbw.append(str);&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic void printLine(String str) throws IOException {&\#13;\r\n\t\t\tprint(str);&\#13;\r\n\t\t\tbw.append("\\n");&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\tpublic void close() throws IOException {&\#13;\r\n\t\t\tbw.close();&\#13;\r\n\t\t}&\#13;\r\n\t}&\#13;\r\n</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Consolas|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Consolas;
proposalOrderMigrated=true
sourceHoverBackgroundColor=255,255,225
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
