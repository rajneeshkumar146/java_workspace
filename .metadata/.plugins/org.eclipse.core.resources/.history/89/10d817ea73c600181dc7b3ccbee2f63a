package Questions.Ch04_Graph.Basics;

import java.util.ArrayList;
import java.util.Scanner;

public class Q001_UVa11902_Dominator {
	public static Scanner scn = new Scanner(System.in);

	public static void main(String[] args) throws Exception {
		solve();
	}

	private static ArrayList<Integer>[] graph;
	private static boolean[] isdone;
	private static int end;
	private static char[][] ans;

	public static void solve() throws Exception {
		int t = scn.nextInt();

		for (int count = 1; count <= t; count++) {
			end = scn.nextInt();
			graph = new ArrayList[end];
			isdone = new boolean[end];
			ans = new char[end][end];

			input();

			for (int i = 1; i < end - 1; i++) {
				boolean res = DFS(0, i);
				if (!res) {
					for (int j = 0; j < end; j++) {
						if (ans[i][j] == '\u0000') {
							ans[i][j] = 'Y';
						}
					}
				}
			}

			System.out.println("Case " + count + ":");
			input();

		}
	}

	private static boolean DFS(int st, int block) {
		if (st == end - 1) {
			return true;
		}

		isdone[st] = true;
		for (Integer i : graph[st]) {
			if (isdone[i] || i == block) {
				continue;
			}

			return DFS(i, block);
		}

		return false;
	}

	private static void input() {
		for (int i = 0; i < end; i++) {
			graph[i] = new ArrayList<>();
			for (int j = 0; j < end; j++) {
				int n = scn.nextInt();
				if (i == 0) {
					ans[i][j] = 'Y';
				} else if (i == j) {
					ans[i][j] = 'Y';
				}

				if (n == 0) {
					ans[i][j] = 'N';
				}

				if (n == 1) {
					graph[i].add(j);
				}
			}
		}
	}

	private static void display() {
		for (int i = 0; i < end; i++) {
			for (int j = 0; j < end; j++) {
				line();
				System.out.print("|" + ans[i][j] + "|");
			}
		}

		line();
	}

	private static void line() {
		System.out.print("+");
		for (int i = 1; i < 2 * end; i++) {
			System.out.print("-");
		}
		System.out.println("+");

	}

}
