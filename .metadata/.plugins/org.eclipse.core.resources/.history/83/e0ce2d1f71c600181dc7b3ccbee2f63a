package Questions.Ch04_Graph.Basics;

import java.util.ArrayList;
import java.util.Scanner;

public class Q001_UVa11902_Dominator {
	public static Scanner scn = new Scanner(System.in);

	public static void main(String[] args) throws Exception {
		solve();
	}

	private static ArrayList<Integer>[] graph;
	private static boolean[] isdone;
	private static int end;
	private static char[][] ans;

	public static void solve() throws Exception {
		int t = scn.nextInt();

		while (t-- > 0) {
			end = scn.nextInt();
			graph = new ArrayList[end];
			isdone = new boolean[end];

			for (int i = 0; i < end; i++) {
				for (int j = 0; j < end; j++) {
					int n = scn.nextInt();
					if (i == 0) {
						ans[i][j] = 'Y';
					} else if (i == j) {
						ans[i][j] = 'Y';
					}

					if (n == 0) {
						ans[i][j] = 'N';
					}

					if (n == 1) {
						graph[i].add(j);
					}
				}
			}

		}
	}

	private static boolean DFS(int st) {
		if (st == end) {
			return true;
		}

		isdone[st] = true;
		for (Integer i : graph[st]) {
			if (!isdone[i]) {
				return DFS(i);
			}
		}
	}

}
