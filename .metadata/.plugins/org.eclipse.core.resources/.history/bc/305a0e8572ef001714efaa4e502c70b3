package BinaryTree.Misc;

import java.util.Scanner;

public class Q01_Delete_A_Tree {
	private class Node {
		private int data;
		private Node left;
		private Node right;
	}

	private Node root;
	private int size;
	
	public Q01_Delete_A_Tree() {
		Scanner scn = new Scanner(System.in);
		this.root = takeinput(null, false, scn);

	}

	private Node takeinput(Node parent, boolean ilc, Scanner scn) {
		// prompt
		if (parent == null) {
			System.out.println("Entre Data for Root");
		} else {
			System.out.format("Enter data for %s for" + parent.data + "%n", ilc ? "Left Child" : "right Child");
		}

		// Set_Data
		int data = scn.nextInt();
		Node node = new Node();
		node.data = data;
		this.size++;

		System.out.println("Do you have a left Child: ");
		Boolean hlc = scn.nextBoolean();
		if (hlc) {
			node.left = takeinput(node, true, scn);
		}

		System.out.println("Do you have a right child: ");
		boolean hrc = scn.nextBoolean();
		if (hrc) {
			node.right = takeinput(node, false, scn);
		}

		return node;
	}

	
	
	//Q1_Delete_a_tree---------------------------------------------------------------------------------------------------------
	
	public void clear(){

	}

	private void clear(Node node){
		
		
		if(node.left!=null){
		clear(node.left);
		}
		if(node.right!=null){
		clear(node.right);
		}F
		System.out.println(node.data);
		node=null;
		
	}
	
	
}
